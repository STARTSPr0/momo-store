variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

stages:
  - test
  - build
  - build_docker
  - nexus_upload

include:
  - template: Security/SAST.gitlab-ci.yml

upload-to-nexus:
  stage: nexus_upload
  needs:
    - build-back-code-job
  script:
    - cd ${CI_PROJECT_DIR}/backend/back-momo-${VERSION}
    - tar czvf api-${VERSION}.tar.gz api
    - ls -la
    - >
      curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}"
      -TJL api-${VERSION}.tar.gz
      ${NEXUS_REPO_URL}/${NEXUS_REPO_BACK}/${VERSION}/back-momo-${VERSION}/api-${VERSION}.tar.gz

build-back-code-job:
  stage: build
  image: golang:1.17
  only:
    changes:
      - backend/**/*
  needs:
    - sonarqube-backend-sast
  script:
    - cd backend/cmd/api
    - go build .
    - mkdir ${CI_PROJECT_DIR}/backend/back-momo-${VERSION} && mv api ${CI_PROJECT_DIR}/backend/back-momo-${VERSION}
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/backend/back-momo-${VERSION}/api

build-backend-docker-job:
  stage: build_docker
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  needs:
    - sonarqube-backend-sast
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/backend"
      --dockerfile "${CI_PROJECT_DIR}/backend/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/back-momo:$CI_COMMIT_SHA"
      --build-arg VERSION=$VERSION
      --cache=true

tag-backend-docker:
  variables:
    GIT_STRATEGY: none
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [""]
  cache: []
  stage: build_docker
  needs:
    - build-backend-docker-job
  before_script:
    - crane auth login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - crane tag $CI_REGISTRY_IMAGE/back-momo:$CI_COMMIT_SHA $VERSION

backend-go-test:
  stage: test
  image: golang:1.17
  only:
    changes:
      - backend/**/*
  script:
    - cd backend
    - go test -v ./...

sonarqube-backend-sast:
  stage: test
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  only:
    changes:
      - backend/**/*
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - "sonar-scanner -Dsonar.qualitygate.wait=true -X
      -Dsonar.projectKey=${SONAR_DIPLOM_KEY_BACK}
      -Dsonar.sources=backend
      -Dsonar.host.url=${SONAR_DIPLOM_URL}
      -Dsonar.login=${SONAR_DIPLOM_LOGIN_BACK}"
