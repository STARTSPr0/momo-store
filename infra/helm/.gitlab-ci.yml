stages:
  - deploy
 
before_script:
  #Установливаем yc
  - curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
  - ln -s /root/yandex-cloud/bin/yc /usr/bin/yc #делаем линк на YC
  #Передаем переменные для Yandex Cloud
  - yc config set token ${TF_YC_OAUTH_TOKEN}
  - yc config set folder-id ${TF_FOLDER_ID}
  - yc config set cloud-id ${TF_CLOUD_ID}
  #Подключаемся к созданному кластеру
  - yc managed-kubernetes cluster get-credentials ${CLUSTER_NAME} --external --force
  #Переключаемся на дефолтный неймспейс
  - kubectl config set-context --current --namespace=default
  # - cat ${CONF_JSON} > ~/.docker/config.json
  # - cat ~/.docker/config.json

deploy-ingress-nginx:
  stage: deploy
  image: alpine/k8s:1.22.6
  script:
    - >
      helm upgrade --install --atomic ingress-nginx ingress-nginx 
      --repo https://kubernetes.github.io/ingress-nginx 
      --namespace ingress-nginx
      --create-namespace
      --atomic
  when: manual

deploy-grafana:
  stage: deploy
  image: alpine/k8s:1.22.6
  script:
    - >
      helm upgrade --install grafana ${CI_PROJECT_DIR}/infra/helm/grafana
      --namespace grafana
      --create-namespace
      --atomic
  when: manual 

deploy-prometheus:
  stage: deploy
  image: alpine/k8s:1.22.6
  script:
    - >
      helm upgrade --install prometheus ${CI_PROJECT_DIR}/infra/helm/prometheus
      --namespace prometheus
      --create-namespace
      --atomic
  when: manual

deploy-momo:
  stage: deploy
  image: alpine/k8s
  script:
    - >
      helm upgrade --install momo-store ${CI_PROJECT_DIR}/infra/helm/momo-chart
      --namespace momo-store
      --create-namespace
      --atomic
  when: manual