variables:
  FRONT_VERSION: 1.0.${CI_PIPELINE_ID}

stages:
  - build
  - nexus_upload
  - test
  - build_docker
  - deploy

build-frontend-code-job:
  stage: build
  only:
    changes:
      - frontend/**/*
  script:
    - cd frontend
    - npm install
    - npm run build
    - mkdir front-momo-${FRONT_VERSION} && mv dist front-momo-${FRONT_VERSION}
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/frontend/front-momo-${FRONT_VERSION}

upload-to-nexus:
  stage: nexus_upload
  needs:
    - build-frontend-code-job
  script:
    - cd ${CI_PROJECT_DIR}/frontend/
    - tar czvf front-momo-${FRONT_VERSION}.tar.gz front-momo-${FRONT_VERSION}
    - ls -la
    - >
      curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}"
      -JL --upload-file front-momo-${FRONT_VERSION}.tar.gz
      ${NEXUS_REPO_URL}/repository/${NEXUS_REPO_FRONT}/${FRONT_VERSION}/front-momo-${FRONT_VERSION}.tar.gz

build-frontend-docker-job:
  stage: build_docker
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  needs:
    - sonarqube-frontend-sast
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/frontend"
      --dockerfile "${CI_PROJECT_DIR}/frontend/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/front-momo:$CI_COMMIT_SHA"
      --build-arg VERSION=${FRONT_VERSION}
      --cache=true

tag-frontend-docker:
  variables:
    GIT_STRATEGY: none
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [""]
  cache: []
  stage: build_docker
  needs:
    - build-frontend-docker-job
  before_script:
    - crane auth login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - crane tag $CI_REGISTRY_IMAGE/front-momo:$CI_COMMIT_SHA ${FRONT_VERSION}

sonarqube-frontend-sast:
  stage: test
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  only:
    changes:
      - frontend/**/*
  needs:
    - build-frontend-code-job
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - "sonar-scanner -Dsonar.qualitygate.wait=true -X
      -Dsonar.projectKey=${SONAR_DIPLOM_KEY_FRONT}
      -Dsonar.sources=${CI_PROJECT_DIR}/frontend/front-momo-${FRONT_VERSION}
      -Dsonar.host.url=${SONAR_DIPLOM_URL}
      -Dsonar.login=${SONAR_DIPLOM_LOGIN_FRONT}"

#обновляем чарт, т.к. собран новый образ
deploy-momo: 
  stage: deploy
  image: alpine/k8s:1.27.16
  script:
    - >
      helm upgrade --install momo-store ${CI_PROJECT_DIR}/infra/helm/momo-chart
      --namespace momo-store
      --set frontend.image.tag=${FRONT_VERSION}
      --create-namespace
      --atomic
  when: manual
